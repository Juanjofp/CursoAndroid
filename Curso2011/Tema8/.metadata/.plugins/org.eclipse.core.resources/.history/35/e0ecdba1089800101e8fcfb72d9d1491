package com.juanjofp.android.tema8;

import com.juanjofp.android.tema8.services.SampleBoundedService;
import com.juanjofp.android.tema8.services.SampleIntentService;
import com.juanjofp.android.tema8.services.SampleService;

import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.Messenger;
import android.os.RemoteException;
import android.view.View;
import android.widget.Toast;

public class Tema_8Activity extends Activity {
    /** Called when the activity is first created. */

	public static final int MSG_RESPONSE_HELLO = 1;
	
    Messenger mService = null, mServiceResponse=null;
    boolean mBound;
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
    }
    
    public void sampleIntentService(View v){
    	startService(new Intent(this, SampleIntentService.class));
    }
    
    public void sampleService(View v){
    	startService(new Intent(this, SampleService.class));
    }
    
    public void sampleBoundedService(View v) {
        if (!mBound) return;
        // Create and send a message to the service, using a supported 'what' value
        Message msg = Message.obtain(null, SampleBoundedService.MSG_SAY_HELLO, 0, 0);
        try {
            mService.send(msg);
        } catch (RemoteException e) {
            e.printStackTrace();
        }
    }
    
    @Override
    protected void onStart() {
        super.onStart();
        // Bind to the service
        bindService(new Intent(this, SampleBoundedService.class), mConnection,
            Context.BIND_AUTO_CREATE);
    }

    @Override
    protected void onStop() {
        super.onStop();
        // Unbind from the service
        if (mBound) {
            unbindService(mConnection);
            mBound = false;
        }
    }
    
    private ServiceConnection mConnection = new ServiceConnection() {
    	
        public void onServiceConnected(ComponentName className, IBinder service) {
            mService = new Messenger(service);
            mBound = true;
        }

        public void onServiceDisconnected(ComponentName className) {
            mService = null;
            mBound = false;
        }
    };
    
    class OutcomingHandler extends Handler {

		@Override
		public void handleMessage(Message msg) {
			switch (msg.what) {
			case MSG_RESPONSE_HELLO:
				Toast.makeText(getApplicationContext(), "hello Service!"+msg.arg1,
						Toast.LENGTH_SHORT).show();
				break;
			default:
				super.handleMessage(msg);
			}
		}
	}
}